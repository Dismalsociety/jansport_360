

# Plot 1: R² comparison (positive values only)
model_names = list(results.keys())
r2_values = [results[name]['r2'] for name in model_names]

# Only plot positive R² values
positive_r2_values = [max(0, r2) for r2 in r2_values]

axes[0, 0].bar(model_names, positive_r2_values, alpha=0.7)
axes[0, 0].set_ylabel('R² Score')
axes[0, 0].set_title('Model Performance Comparison')
axes[0, 0].set_ylim(0, None)  # Y-axis starts at 0

# Plot 2: Best model predictions vs actual (time series style)
best_result = results[best_model_name]
axes[0, 1].plot(best_result['targets'], label='Actual', alpha=0.7, marker='o', markersize=4)
axes[0, 1].plot(best_result['pred'], label='Predicted', alpha=0.7, marker='s', markersize=4)
axes[0, 1].set_xlabel('Test Sample')
axes[0, 1].set_ylabel('Pressure')
axes[0, 1].set_title(f'Best Model: {best_model_name} - Predictions vs Actual')
axes[0, 1].legend()
axes[0, 1].grid(True)

# Plot 3: Best model correlation scatter plot
axes[1, 0].scatter(best_result['targets'], best_result['pred'], alpha=0.6, s=50)
axes[1, 0].plot([best_result['targets'].min(), best_result['targets'].max()], 
                [best_result['targets'].min(), best_result['targets'].max()], 'r--', lw=2)
axes[1, 0].set_xlabel('Actual Pressure')
axes[1, 0].set_ylabel('Predicted Pressure')
axes[1, 0].set_title(f'Best Model Correlation (R² = {best_r2:.4f})')
axes[1, 0].grid(True)

# Add R² text box
axes[1, 0].text(0.05, 0.95, f'R² = {best_r2:.4f}', 
                transform=axes[1, 0].transAxes, verticalalignment='top',
                bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.8))

# Plot 4: Training curves for best model
axes[1, 1].plot(best_result['train_losses'], label='Train Loss')
axes[1, 1].plot(best_result['val_losses'], label='Val Loss')
axes[1, 1].set_xlabel('Epoch')
axes[1, 1].set_ylabel('Loss')
axes[1, 1].set_title(f'{best_model_name} Training and Validation Loss')
axes[1, 1].legend()
axes[1, 1].grid(True)

plt.tight_layout()
plt.show()

print("\nDone!")
