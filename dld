# Simple Model 
class Model(nn.Module):
    def __init__(self):
        super(Model, self).__init__()
        
        # Layers
        self.dense1 = nn.Linear(2, 64)
        self.relu = nn.ReLU()
        self.lstm = nn.LSTM(64, 128, batch_first=True)
        self.dense2 = nn.Linear(128, predict_length)

    def forward(self, x):
       
        # Dense layer on each timestep
        batch, seq, features = x.shape
        x = x.reshape(-1, 2)
        x = self.relu(self.dense1(x))
        x = x.reshape(batch, seq, 64)
        
        # LSTM
        _, (hidden, _) = self.lstm(x)
        
        # Output
        output = self.dense2(hidden[0])
        return output
